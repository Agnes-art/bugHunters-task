{
	"info": {
		"_postman_id": "48298908-1602-456a-af01-f48ff5048cb6",
		"name": "STSTStudentCourse",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "31484001",
		"_collection_link": "https://grey-flare-791228.postman.co/workspace/STS-COURSE~0f2ef097-7901-4720-a04c-5bfc85cf2b80/collection/31484001-48298908-1602-456a-af01-f48ff5048cb6?action=share&source=collection_link&creator=31484001"
	},
	"item": [
		{
			"name": "Get All Todo Entries",
			"item": [
				{
					"name": "Get All Todo Entries",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Response status code is 200', function () {",
									"    pm.response.to.have.status(200);",
									"})",
									"",
									"pm.test('Body matches string', function () {",
									"    pm.expect(pm.response.text()).to.include('apiVersion');",
									"})",
									"",
									"pm.test('Response is an object with specific properties', function () {",
									"    var jsonData = pm.response.json();",
									"    console.log(jsonData);",
									"    pm.expect(jsonData).to.be.an('object');",
									"    pm.expect(jsonData).to.have.property('apiVersion');",
									"    pm.expect(jsonData).to.have.property('title');",
									"    pm.expect(jsonData).to.have.property('paymentCurrency');",
									"    pm.expect(jsonData).to.have.property('categories');",
									"    pm.expect(jsonData).to.have.property('scopes');",
									"    pm.expect(jsonData).to.have.property('apps');",
									"    pm.expect(jsonData).to.have.property('links');",
									"})",
									"",
									"pm.test('Body matches test', function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.apiVersion).to.eql('7.2.3.0');",
									"    pm.expect(jsonData.title).to.eql('Fusio');",
									"    pm.expect(jsonData.paymentCurrency).to.eql('EUR');",
									"})",
									"",
									"pm.test('Body matches categories ', function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.categories[0]).to.eql('authorization');",
									"    pm.expect(jsonData.categories[1]).to.eql('system');",
									"    pm.expect(jsonData.categories[2]).to.eql('consumer');",
									"})",
									"",
									"pm.test('Body matches scope', function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.scopes[0]).to.eql('default');",
									"})",
									"",
									"pm.test('Body matches apps', function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.apps.developer).to.eql('https://demo.fusio-project.org/apps/developer');",
									"    pm.expect(jsonData.apps.fusio).to.eql('https://demo.fusio-project.org/apps/fusio');",
									"    pm.expect(jsonData.apps.redoc).to.eql('https://demo.fusio-project.org/apps/redoc');",
									"})",
									"",
									"pm.test(\"Body matches links\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.links[0].rel).to.eql(\"root\");",
									"    pm.expect(jsonData.links[1].rel).to.eql(\"openapi\");",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseUrl}}/index.php",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"index.php"
							],
							"query": [
								{
									"key": "",
									"value": "",
									"disabled": true
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Get All Entries",
			"item": [
				{
					"name": "Get All Entries",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"console.log(jsonData)",
									"",
									"pm.test('Response status code is 200', function () {",
									"    pm.response.to.have.status(200);",
									"})",
									"",
									"pm.test('Body matches string', function () {",
									"    pm.expect(pm.response.text()).to.include('apiVersion');",
									"})",
									"",
									"pm.test('Response is an object with specific properties', function () {",
									"    var jsonData = pm.response.json();",
									"    console.log(jsonData);",
									"    pm.expect(jsonData).to.be.an('object');",
									"    pm.expect(jsonData).to.have.property('apiVersion');",
									"    pm.expect(jsonData).to.have.property('title');",
									"    pm.expect(jsonData).to.have.property('paymentCurrency');",
									"    pm.expect(jsonData).to.have.property('categories');",
									"    pm.expect(jsonData).to.have.property('scopes');",
									"    pm.expect(jsonData).to.have.property('apps');",
									"    pm.expect(jsonData).to.have.property('links');",
									"})",
									"",
									"pm.test('Body matches test', function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.apiVersion).to.eql('7.2.3.0');",
									"    pm.expect(jsonData.title).to.eql('Fusio');",
									"    pm.expect(jsonData.paymentCurrency).to.eql('EUR');",
									"})",
									"",
									"pm.test('Body matches categories ', function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.categories[0]).to.eql('authorization');",
									"    pm.expect(jsonData.categories[1]).to.eql('system');",
									"    pm.expect(jsonData.categories[2]).to.eql('consumer');",
									"})",
									"",
									"pm.test('Body matches scope', function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.scopes[0]).to.eql('default');",
									"})",
									"",
									"pm.test('Body matches apps', function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.apps.developer).to.eql('https://demo.fusio-project.org/apps/developer');",
									"    pm.expect(jsonData.apps.fusio).to.eql('https://demo.fusio-project.org/apps/fusio');",
									"    pm.expect(jsonData.apps.redoc).to.eql('https://demo.fusio-project.org/apps/redoc');",
									"});",
									"",
									"pm.test(\"Body matches links\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.links[2].rel).to.eql(\"typeapi\");",
									"    pm.expect(jsonData.links[3].rel).to.eql(\"route\");",
									"});",
									"",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/index.php/",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"index.php",
								""
							],
							"query": [
								{
									"key": "",
									"value": "",
									"disabled": true
								}
							]
						},
						"description": "https://demo.fusio-project.org/index.php/"
					},
					"response": []
				}
			]
		},
		{
			"name": "Get entry per ID",
			"item": [
				{
					"name": "Get entry per ID - Valid ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"console.log(jsonData.links[5])",
									"",
									"pm.test('Response status code is 200', function () {",
									"    pm.response.to.have.status(200);",
									"})",
									"",
									"pm.test('Body matches string', function () {",
									"    pm.expect(pm.response.text()).to.include('apiVersion');",
									"})",
									"",
									"pm.test('Response is an object with specific properties', function () {",
									"    var jsonData = pm.response.json();",
									"    console.log(jsonData);",
									"    pm.expect(jsonData).to.be.an('object');",
									"    pm.expect(jsonData).to.have.property('apiVersion');",
									"    pm.expect(jsonData).to.have.property('title');",
									"    pm.expect(jsonData).to.have.property('paymentCurrency');",
									"    pm.expect(jsonData).to.have.property('categories');",
									"    pm.expect(jsonData).to.have.property('scopes');",
									"    pm.expect(jsonData).to.have.property('apps');",
									"    pm.expect(jsonData).to.have.property('links');",
									"})",
									"",
									"pm.test('Body matches test', function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.apiVersion).to.eql('7.2.3.0');",
									"    pm.expect(jsonData.title).to.eql('Fusio');",
									"    pm.expect(jsonData.paymentCurrency).to.eql('EUR');",
									"})",
									"",
									"pm.test('Body matches categories ', function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.categories[0]).to.eql('authorization');",
									"    pm.expect(jsonData.categories[1]).to.eql('system');",
									"    pm.expect(jsonData.categories[2]).to.eql('consumer');",
									"})",
									"",
									"pm.test('Body matches scope', function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.scopes[0]).to.eql('default');",
									"})",
									"",
									"pm.test('Body matches apps', function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.apps.developer).to.eql('https://demo.fusio-project.org/apps/developer');",
									"    pm.expect(jsonData.apps.fusio).to.eql('https://demo.fusio-project.org/apps/fusio');",
									"    pm.expect(jsonData.apps.redoc).to.eql('https://demo.fusio-project.org/apps/redoc');",
									"});",
									"",
									"pm.test(\"Body matches links\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.links[4].rel).to.eql(\"health\");",
									"    pm.expect(jsonData.links[5].rel).to.eql(\"oauth2\");",
									"});",
									"pm.environment.set(\"entryId\", jsonData.links[5].rel);",
									"",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseUrl}}/index.php/",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"index.php",
								""
							]
						},
						"description": "https://demo.fusio-project.org/index.php/todo/:todo_id"
					},
					"response": []
				},
				{
					"name": "Get entry per ID - Invalid ID(params not using TODO ID)",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								""
							],
							"query": [
								{
									"key": "",
									"value": "",
									"disabled": true
								}
							]
						},
						"description": "https://demo.fusio-project.org/index.php/todo/:todo_id"
					},
					"response": []
				}
			]
		}
	]
}